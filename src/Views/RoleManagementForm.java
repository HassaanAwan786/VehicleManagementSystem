package Views;/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import Services.RoleController;
import Structure.AccessRights;
import Structure.Role;

import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.showMessageDialog;

/**
 *
 * @author MacBookPro
 */
public class RoleManagementForm extends javax.swing.JFrame {
    enum STATE{
        DEFAULT,
        NEW,
        EDIT,
        DELETE
    }
    //state variable to check what button state is active
    /*
    if [New] Pressed State = NEW
    elif [Edit] Pressed State = EDIT
    elif [Delete] Pressed State = DELETE
    else [Cancel] Pressed State = DEFAULT
    */
    STATE state = STATE.DEFAULT;
    
    //Iterate with navigators to check what is the current position
    int currentPosition=0;
    
    //automatic increment id whenever a Role record is entered
    int autoID;
    
    RoleController controller;
    /**
     * Creates new form Views.RoleManagementForm
     */
    public RoleManagementForm() {
        initComponents();
        autoID = 0;
        controller = new RoleController();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        moveToFirst = new javax.swing.JButton();
        moveToLast = new javax.swing.JButton();
        moveOneLeft = new javax.swing.JButton();
        moveOneRight = new javax.swing.JButton();
        currentStatus = new javax.swing.JLabel();
        newRole = new javax.swing.JButton();
        editRole = new javax.swing.JButton();
        deleteRole = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        findRole = new javax.swing.JButton();
        saveRecord = new javax.swing.JButton();
        cancelRecord1 = new javax.swing.JButton();
        saveSuccess = new javax.swing.JLabel();
        canCreate = new javax.swing.JRadioButton();
        canDelete = new javax.swing.JRadioButton();
        canEdit = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        canRead = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        moveToFirst.setText("<<");
        moveToFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveToFirstActionPerformed(evt);
            }
        });

        moveToLast.setText(">>");
        moveToLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveToLastActionPerformed(evt);
            }
        });

        moveOneLeft.setText("<");
        moveOneLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveOneLeftActionPerformed(evt);
            }
        });

        moveOneRight.setText(">");
        moveOneRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveOneRightActionPerformed(evt);
            }
        });

        currentStatus.setText("0");

        newRole.setText("Create");
        newRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newRoleActionPerformed(evt);
            }
        });

        editRole.setText("Edit");
        editRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editRoleActionPerformed(evt);
            }
        });

        deleteRole.setText("Delete");
        deleteRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRoleActionPerformed(evt);
            }
        });

        jLabel1.setText("Role ID:");

        jLabel2.setText("Role Name:");

        idField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idFieldActionPerformed(evt);
            }
        });

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        findRole.setText("Find");
        findRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findRoleActionPerformed(evt);
            }
        });

        saveRecord.setText("Save");
        saveRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveRecordActionPerformed(evt);
            }
        });

        cancelRecord1.setText("Cancel");
        cancelRecord1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelRecord1ActionPerformed(evt);
            }
        });

        saveSuccess.setText(" ");

        canCreate.setText("Can create");

        canDelete.setText("Can delete");
        canDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canDeleteActionPerformed(evt);
            }
        });

        canEdit.setText("Can edit");
        canEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canEditActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel3.setText("Role Management");

        canRead.setSelected(true);
        canRead.setText("Can read");
        canRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canReadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2))
                    .addComponent(moveToFirst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newRole, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(editRole)
                        .addGap(12, 12, 12)
                        .addComponent(deleteRole)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveRecord))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(moveOneLeft)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(currentStatus))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(canRead)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(idField)
                                        .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(canCreate)
                                            .addGap(39, 39, 39)
                                            .addComponent(canEdit)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(canDelete))))))
                        .addGap(0, 21, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelRecord1)
                    .addComponent(findRole))
                .addGap(57, 57, 57))
            .addGroup(layout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(moveOneRight)
                .addGap(12, 12, 12)
                .addComponent(moveToLast)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveSuccess)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(233, 233, 233))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel3)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findRole))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(canCreate)
                    .addComponent(canEdit)
                    .addComponent(canDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(moveToFirst)
                            .addComponent(moveOneLeft)
                            .addComponent(currentStatus)
                            .addComponent(moveOneRight)
                            .addComponent(moveToLast))
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveSuccess)
                            .addComponent(canRead))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelRecord1)
                    .addComponent(newRole)
                    .addComponent(editRole)
                    .addComponent(deleteRole)
                    .addComponent(saveRecord))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // a function to set field values on press of specific buttons 
    void setFieldsFromListAt(int index){
        if(controller.searchRole(index)!=null){
            Role nRole;
            nRole = controller.searchRole(index);
            idField.setText(nRole.getId()+"");
            nameField.setText(nRole.getName());
            AccessRights rights = nRole.getRights();
            canCreate.setSelected(rights.isCanCreate());
            canEdit.setSelected(rights.isCanEdit());
            canDelete.setSelected(rights.isCanDelete());
            canRead.setSelected(rights.isCanRead());
        }
        else {
            currentPosition =0;
            setFieldsFromListAt(0);
        }
    }
    void resetFields(){
        idField.setText("");
        nameField.setText("");
        canCreate.setSelected(false);
        canEdit.setSelected(false);
        canDelete.setSelected(false);
        canRead.setSelected(true);
    }
    private void newRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newRoleActionPerformed
        // TODO add your handling code here:
        autoID = controller.getSize();
        state = STATE.NEW;
        idField.setText(autoID+"");
        resetFields();
    }//GEN-LAST:event_newRoleActionPerformed

    private void editRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editRoleActionPerformed
        // TODO add your handling code here:
        state = STATE.EDIT;
        resetFields();
        currentStatus.setText("0");
        currentPosition =0;
        if(controller.getSize()!=0){
            setFieldsFromListAt(currentPosition);
        }
    }//GEN-LAST:event_editRoleActionPerformed

    private void deleteRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRoleActionPerformed
        // TODO add your handling code here:
        state = STATE.DELETE;
        resetFields();
        currentStatus.setText("0");
        currentPosition =0;
        if(controller!=null && controller.getSize()!=0){
            setFieldsFromListAt(currentPosition);
        }
    }//GEN-LAST:event_deleteRoleActionPerformed

    private void idFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idFieldActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void findRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findRoleActionPerformed
        // TODO add your handling code here:
        saveSuccess.setText("");
        if(controller!=null){
            int position = controller.searchRole(nameField.getText());
            if(position!=-1){
                currentPosition = position;
                setFieldsFromListAt(currentPosition);
                currentStatus.setText(currentPosition+"");
            }
        }
    }//GEN-LAST:event_findRoleActionPerformed

    private void saveRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveRecordActionPerformed
        // TODO add your handling code here:
        // check if the id or name fields are not empty
        if(state == STATE.NEW && !"".equals(idField.getText()) && !"".equals(nameField.getText())){
            Role nRole = new Role();
            nRole.setId(Integer.parseInt(idField.getText()));
            nRole.setName(nameField.getText());
            AccessRights rights = new AccessRights(canCreate.isSelected(),canDelete.isSelected(),canEdit.isSelected(),canRead.isSelected());
            nRole.setRights(rights);
            if(controller==null) controller = new RoleController();
            
            //save data and check if it is successfully saved or not
            if(controller.createRole(nRole)){
                autoID = controller.getSize();
            }
            idField.setText(autoID+"");
            nameField.setText("");
        }
        else if(state == STATE.EDIT && !"".equals(idField.getText()) && !"".equals(nameField.getText())){
            if(controller!=null){
                AccessRights rights = new AccessRights(canCreate.isSelected(),canDelete.isSelected(),canEdit.isSelected(),canRead.isSelected());
                Role nRole = new Role(Integer.parseInt(idField.getText()),nameField.getText(),rights);
                controller.editRole(nRole);
                resetFields();
            }
        }
        else if(state == STATE.DELETE && !"".equals(idField.getText()) || !"".equals(nameField.getText())){
            if(controller!=null){
                controller.delRole(currentPosition);
                resetFields();
            }
        }
        else{
            showMessageDialog(null, "Some fields are missing or there is some other exception", "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveRecordActionPerformed
    
    private void cancelRecord1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelRecord1ActionPerformed
        // TODO add your handling code here:
        dispose();
        new AdminDashboard().setVisible(true);
        
    }//GEN-LAST:event_cancelRecord1ActionPerformed

    private void moveOneLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveOneLeftActionPerformed
        // TODO add your handling code here:
        if(currentPosition!=0){
            currentPosition--;
        }
        setFieldsFromListAt(currentPosition);
        currentStatus.setText(currentPosition+"");
        saveSuccess.setText("");
    }//GEN-LAST:event_moveOneLeftActionPerformed

    private void moveOneRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveOneRightActionPerformed
        // TODO add your handling code here:
        if(controller!=null){
            if(currentPosition!=controller.getSize()-1){
                currentPosition++;
            }
            setFieldsFromListAt(currentPosition);
            currentStatus.setText(currentPosition+"");
            saveSuccess.setText("");
        }
    }//GEN-LAST:event_moveOneRightActionPerformed

    private void moveToFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveToFirstActionPerformed
        // TODO add your handling code here:
        currentPosition=0;
        currentStatus.setText(currentPosition+"");
        setFieldsFromListAt(currentPosition);
        saveSuccess.setText("");
    }//GEN-LAST:event_moveToFirstActionPerformed

    private void moveToLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveToLastActionPerformed
        // TODO add your handling code here:
        if(controller!=null){
            currentPosition = controller.getSize()-1;
            currentStatus.setText(currentPosition+"");
            setFieldsFromListAt(currentPosition);
        }
        saveSuccess.setText("");
    }//GEN-LAST:event_moveToLastActionPerformed

    private void canDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_canDeleteActionPerformed

    private void canEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_canEditActionPerformed

    private void canReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canReadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_canReadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoleManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoleManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoleManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoleManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoleManagementForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton canCreate;
    private javax.swing.JRadioButton canDelete;
    private javax.swing.JRadioButton canEdit;
    private javax.swing.JRadioButton canRead;
    private javax.swing.JButton cancelRecord1;
    private javax.swing.JLabel currentStatus;
    private javax.swing.JButton deleteRole;
    private javax.swing.JButton editRole;
    private javax.swing.JButton findRole;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton moveOneLeft;
    private javax.swing.JButton moveOneRight;
    private javax.swing.JButton moveToFirst;
    private javax.swing.JButton moveToLast;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton newRole;
    private javax.swing.JButton saveRecord;
    private javax.swing.JLabel saveSuccess;
    // End of variables declaration//GEN-END:variables
}
